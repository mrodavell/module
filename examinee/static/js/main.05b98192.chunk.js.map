{"version":3,"sources":["assets/prc.png","context/auth.js","PrivateRoute.js","Api.js","components/UI/Error/Error.js","components/Login/Login.js","context/profile.js","components/UI/Common/LinearProgressBarWithLabel.js","components/UI/Forms/AddressForm.js","components/UI/Forms/CompanionForm.js","components/UI/Forms/TransportationForm.js","components/UI/Forms/Fields/StartQuarantineDate.js","components/UI/Forms/Fields/EndQuarantineDate.js","components/UI/Forms/QuarantineForm.js","components/UI/Forms/Fields/TestTypesSelect.js","components/UI/Forms/Fields/TestsStatusSelect.js","components/UI/Forms/Fields/TestReleaseDate.js","components/UI/Forms/TestsForm.js","components/UI/Tabs/TabContent/Remarks.js","components/UI/Tabs/TabContent/Logs.js","components/Dashboard/Home/Home.js","components/UI/Forms/AccountForm.js","components/Dashboard/Account/Account.js","components/Dashboard/Dashboard.js","components/UI/Error/Error404.js","containers/App.js","serviceWorker.js","index.js","assets/logo.png"],"names":["module","exports","AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","authData","render","props","authTokens","expires_in","Date","now","isAuthenticated","to","Axios","create","baseURL","Error","className","this","children","Login","useState","isProcessing","setProcessing","isError","setIsError","errorMessage","setErrorMessage","setAuthTokens","isShowPass","setIsShowPass","credentialsInputHandler","v","Container","style","width","marginTop","opacity","Paper","elevation","padding","borderRadius","border","Row","Col","xs","Card","src","Logo","height","alt","Form","onSubmit","e","preventDefault","username","document","querySelector","value","password","API","post","then","result","status","data","message","catch","loginHandler","TextField","onChange","target","name","placeholder","label","fullWidth","required","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","Button","variant","color","disabled","Spinner","icon","faSignInAlt","ProfileContext","useProfile","LinearProgressBar","Box","display","alignItems","mr","LinearProgress","minWidth","Typography","Math","round","useStyles","makeStyles","root","LinearProgressBarWithLabel","classes","progress","setProgress","useEffect","timer","setInterval","prevProgress","floor","random","clearInterval","title","AddressForm","profileData","loadProfile","token","setIsProcessing","tempAddress","setTempAddress","evPatId","setEvPatId","isShowSaveButton","setIsShowSaveButton","editTitle","setEditTitle","evId","participants","id","address","temp_residence","Provider","fluid","faEdit","faTimes","put","headers","access_token","Swal","fire","formSubmit","md","size","faUserEdit","CompanionForm","companionId","setCompanionId","companionName","setCompanionName","contact","setContact","relationship","setRelationship","setAddress","companion","companions","length","TransportationForm","transpoId","setTranspoId","vehicle","setVehicle","plateNumber","setPlateNumber","driver","setDriver","transportation","plate_no","StartQuarantineDate","dateFns","DateFnsUtils","startQuarantineDate","setStartQuarantineDate","quarantine","format","start","utils","date","startDateChangeHandler","changeHandler","clearable","hideTabs","showTodayButton","EndQuarantineDate","endQuarantineDate","setEndQuarantineDate","end","isStartSelected","minDate","QuarantineForm","quarantineId","setQuarantineId","monitoring","setMonitoring","setIsStartSelected","setMinDate","startDate","endDate","addDays","Tooltip","placement","multiline","rows","TestTypesSelect","testType","setTestType","tests","test_type_id","select","map","option","MenuItem","key","TestsStatusSelect","testStatus","setTestStatus","TestReleaseDate","testRelease","setTestRelease","released","TestsForm","testsId","setTestsId","testsLocation","setTestLocation","location","Remarks","remarks","setRemarks","loadRemarks","useCallback","remarksList","formatData","setTimeout","ListGroup","overflow","overflowX","maxHeight","rm","index","ListGroupItem","faCommentDots","Logs","logs","setLogs","loadLogs","trace_logs","logsList","console","log","temperature","created_at","faTemperatureHigh","Home","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","faMapMarkedAlt","AccordionDetails","faUsers","faCar","faHouseUser","faSyringe","Account","setPassword","oldPassword","setOldPassword","isShowNewPass","setIsShowNewPass","isShowConfirmPass","setIsShowConfirmPass","isShowOldPass","setIsShowOldPass","isConfirmError","setIsConfirmError","isMinimum","setIsMinimum","faKey","newPassData","changePasswordHandler","error","AccountForm","Dashboard","setProfileData","isOpen","setIsOpen","handleNavigation","stringPath","history","push","getProfileInfo","get","Navbar","backgroundColor","expand","NavbarBrand","href","outline","faBars","Collapse","navbar","Nav","NavItem","NavLink","sessionStorage","removeItem","window","reload","exact","path","Error404","App","existingTokens","JSON","parse","getItem","setItem","stringify","basename","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05b98192.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/prc.a6cbd833.png\";","import { createContext, useContext } from 'react' \r\n\r\nexport const AuthContext = createContext() \r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext) \r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from \"./context/auth\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const authData = useAuth();\r\n    \r\n    const isAuthenticated = (authData) =>{\r\n        if(authData.authTokens === null){\r\n            return false;\r\n        }\r\n\r\n        if (authData.authTokens.expires_in > Date.now()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <Route {...rest} render= { \r\n            (props) => isAuthenticated(authData) ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import Axios from 'axios';\r\n\r\nexport default Axios.create({\r\n    // baseURL: \"https://passengertracer.net/apis/api/v1/\"\r\n    // baseURL: \"http://202.137.117.172/covid19tracker-api/public/api/v1\"\r\n    // baseURL: \"http://10.10.10.61/apis/api\"\r\n    baseURL : \"http://tracer.ustp.edu.ph/apis/api/v1\",\r\n    // baseURL: \"http://tracer.test/api/v1/\"\r\n})","import React, { Component } from 'react'\r\n\r\nexport default class Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"text-danger text-center p-1\">{this.props.children}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Redirect } from \"react-router-dom\"\r\nimport API from '../../Api'\r\nimport { useAuth } from \"../../context/auth\"\r\n\r\nimport Error from '../UI/Error/Error'\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Form,\r\n    Spinner\r\n} from 'reactstrap'\r\nimport { TextField, Button, Paper, InputAdornment, IconButton  } from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\n\r\nimport PRC from '../../assets/prc.png'\r\nimport Logo from '../../assets/logo.png'\r\n\r\nconst Login = (props) => {\r\n\r\n    const [isProcessing, setProcessing] = useState(false)\r\n    const [isError, setIsError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('Oops! sorry something went wrong...')\r\n    const { authTokens, setAuthTokens } = useAuth()\r\n\r\n    const [isShowPass, setIsShowPass] = useState(false)\r\n    const toggleShowPassword = () => setIsShowPass(!isShowPass)\r\n\r\n    const isAuthenticatedHandler = () => {\r\n        const token = authTokens\r\n\r\n        if (token === null) {\r\n            return false\r\n        } else {\r\n            if (token.expires_in < Date.now()) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    if (isAuthenticatedHandler()) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault()\r\n        const username = document.querySelector(\"input[name=username]\").value\r\n        const password = document.querySelector(\"input[name=password]\").value\r\n\r\n        if (username !== \"\" && password !== \"\") {\r\n            setProcessing(true)\r\n            API.post(\"auth/examinee/login\", {\r\n                username,\r\n                password\r\n            }).then(result => {\r\n                setProcessing(false)\r\n                if (result.status === 200) {\r\n                    if (result.data.status === false) {\r\n                        setErrorMessage(result.data.message)\r\n                        setIsError(true)\r\n                    } else {\r\n                        setAuthTokens(result.data)\r\n                    }\r\n                } else if (result.status === 254) {\r\n                    setErrorMessage(result.data.message)\r\n                    setIsError(true)\r\n                } else {\r\n                    setIsError(true)\r\n                }\r\n            }).catch(e => {\r\n                setProcessing(false)\r\n                setIsError(true)\r\n            })\r\n        } else {\r\n            setErrorMessage(\"Please enter a username and password\")\r\n            setIsError(true)\r\n        }\r\n    }\r\n\r\n    const credentialsInputHandler = (v) => {\r\n        if (v === \"\") {\r\n            setIsError(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginBg\">\r\n            <Container className=\"p-4\" style={{ width: '500px', marginTop: '5%', opacity: \"0.95\" }}>\r\n                <Paper elevation={5} className=\"p-0 m-0\" style={{ padding: \"10px\", borderRadius: \"0px\", border: \"none\" }}>\r\n                    <Row className=\"p-0 m-0\">\r\n                        <Col xs={12} className=\"p-4 m-0 mt-2\">\r\n                            <Card className=\"p-0 m-0\" style={{ borderRadius: \"0px\", border: \"none\" }}>\r\n                                <Col xs={12} className=\"mt-4 text-center\">\r\n                                    <img className=\"mt-4\" src={Logo} width=\"350\" height=\"100\" alt=\"EMS Logo\" />\r\n                                    <h6>Event Monitoring System</h6>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Form onSubmit={(e) => loginHandler(e)}>\r\n                                        <Col xs={12} className=\"pl-4 pr-4 mb-2 text-center\">\r\n                                            {isError && <Error>{errorMessage}</Error>}\r\n                                        </Col>\r\n                                        <Col xs={12} className=\"pl-4 pr-4 mb-2\">\r\n                                            <TextField onChange={(v) => credentialsInputHandler(v.target.value)} name=\"username\" placeholder=\"Username\" label=\"Username\" fullWidth required />\r\n                                        </Col>\r\n                                        <Col xs={12} className=\"pl-4 pr-4 mb-2\">\r\n                                            <TextField onChange={(v) => credentialsInputHandler(v.target.value)} type={isShowPass ? \"text\" : \"password\"} name=\"password\" placeholder=\"Password\" label=\"Password\" InputProps={{\r\n                                                endAdornment: <InputAdornment position=\"end\">\r\n                                                    <IconButton onClick={toggleShowPassword}>\r\n                                                        {isShowPass ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                            }} fullWidth required />\r\n                                        </Col>\r\n                                        <Col xs={12} className=\"pl-4 pr-4 mt-3 mb-4\">\r\n                                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"pt-1\" disabled={isProcessing} fullWidth>\r\n                                                {isProcessing ? <div className=\"text-center mt-1\"><Spinner style={{ width: '1.5rem', height: '1.5rem' }} color=\"light\" /></div> : <div className=\"pt-1\"><span>LOGIN</span><FontAwesomeIcon className=\"pl-1\" icon={faSignInAlt} /></div>}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login ","import { createContext, useContext } from 'react' \r\n\r\nexport const ProfileContext = createContext() \r\n\r\nexport function useProfile() {\r\n  return useContext(ProfileContext) \r\n}","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nfunction LinearProgressBar(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n})\r\n\r\nLinearProgressBar.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate and buffer variants.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nconst LinearProgressBarWithLabel = (props) => {\r\n    const classes = useStyles()\r\n    const [progress, setProgress] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n\r\n            setProgress((prevProgress) => ((prevProgress < 89 && prevProgress < 100) ?  prevProgress + Math.floor(Math.random() * 10) + 1 : 99))\r\n\r\n\r\n        }, 800)\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography>{props.title}</Typography>\r\n            <LinearProgressBar value={progress} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinearProgressBarWithLabel\r\n","import React, { useState, useEffect } from 'react'\r\nimport API from '../../../Api'\r\nimport { ProfileContext } from '../../../context/profile'\r\nimport Swal from 'sweetalert2'\r\nimport { useAuth } from '../../../context/auth'\r\nimport { useProfile } from '../../../context/profile'\r\nimport { TextField, Paper, Button } from '@material-ui/core'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserEdit, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport LinearProgressBarWithLabel from '../../UI/Common/LinearProgressBarWithLabel'\r\n\r\nconst AddressForm = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    let loadProfile = useProfile().loadProfile\r\n    const token = useAuth().authTokens\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [tempAddress, setTempAddress] = useState(\"\")\r\n    const [evPatId, setEvPatId] = useState(\"\")\r\n    const [isShowSaveButton, setIsShowSaveButton] = useState(false)\r\n    const [editTitle, setEditTitle] = useState(\"Edit\")\r\n    const toggleSaveButton = () => {\r\n\r\n        if (isShowSaveButton) {\r\n            setEditTitle(\"Edit\")\r\n        } else {\r\n            setEditTitle(\"Close\")\r\n        }\r\n\r\n        setIsShowSaveButton(!isShowSaveButton)\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        \r\n        e.preventDefault()\r\n        setIsProcessing(true)\r\n        let data = {\r\n            \"temp_residence\": document.querySelector(\"input[name=tempAddress]\").value\r\n        }\r\n\r\n        API.put(`participants/address/${evPatId}`, data, {\r\n            headers: {\r\n                'Authorization': 'bearer ' + token.access_token,\r\n            }\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n                \r\n                loadProfile()\r\n                setIsProcessing(false)\r\n                \r\n                Swal.fire(\r\n                    'Transaction Completed!',\r\n                    result.data.message,\r\n                    'success'\r\n                )\r\n\r\n            } else {\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Failed!',\r\n                    result.data.message,\r\n                    'error'\r\n                )\r\n            }\r\n        }).catch(e => {\r\n            setIsProcessing(false)\r\n            Swal.fire(\r\n                'Transaction Failed!',\r\n                'Technical Error',\r\n                'error'\r\n            )\r\n        })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let evId = profileData[0].participants[0].id\r\n        let address = profileData[0].participants[0].temp_residence\r\n        setEvPatId(evId)\r\n        setTempAddress(address)\r\n    }, [])\r\n\r\n    return (\r\n        <ProfileContext.Provider value={{ profileData }}>\r\n            <Container fluid className=\"m-0 p-0\">\r\n                <Button onClick={toggleSaveButton}>\r\n                    {!isShowSaveButton &&\r\n                        <FontAwesomeIcon icon={faEdit} className=\"mr-1\" color=\"primary\" />\r\n                    }\r\n                    {isShowSaveButton &&\r\n                        <FontAwesomeIcon icon={faTimes} className=\"mr-1\" color=\"danger\" />\r\n                    }\r\n                    {editTitle}\r\n                </Button>\r\n\r\n                <form onSubmit={(e) => formSubmit(e)}>\r\n                    <Paper className=\"p-3 m-0 mb-2\">\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <TextField\r\n                                    value={tempAddress}\r\n                                    onChange={(e) => setTempAddress(e.target.value)}\r\n                                    name=\"tempAddress\"\r\n                                    label=\"Temporary Address\"\r\n                                    fullWidth\r\n                                    required\r\n                                    disabled={!isShowSaveButton}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            {isProcessing &&\r\n                                <Col md={12}>\r\n                                    <Paper className=\"p-2 m-2 mt-3\">\r\n                                        <LinearProgressBarWithLabel title=\"Updating Temporary Residence\" />\r\n                                    </Paper>\r\n                                </Col>\r\n                            }\r\n                        </Row>\r\n                    </Paper>\r\n                    {isShowSaveButton &&\r\n                        <Button size=\"large\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" disabled={isProcessing} style={{ minWidth: \"120px\" }}>\r\n                            <FontAwesomeIcon icon={faUserEdit} className=\"mr-1\" size=\"lg\" /> Save\r\n                    </Button>\r\n                    }\r\n                </form>\r\n            </Container>\r\n        </ProfileContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default AddressForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport Swal from 'sweetalert2'\r\nimport API from '../../../Api'\r\nimport { useAuth } from '../../../context/auth'\r\nimport { useProfile } from '../../../context/profile'\r\nimport { TextField, Paper, Button } from '@material-ui/core'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserEdit, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport LinearProgressBarWithLabel from '../../UI/Common/LinearProgressBarWithLabel'\r\n\r\nconst CompanionForm = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    let loadProfile = useProfile().loadProfile\r\n    let token = useAuth().authTokens\r\n    const [companionId, setCompanionId] = useState(\"\")\r\n    const [companionName, setCompanionName] = useState(\"\")\r\n    const [contact, setContact] = useState(\"\")\r\n    const [relationship, setRelationship] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isShowSaveButton, setIsShowSaveButton] = useState(false)\r\n    const [editTitle, setEditTitle] = useState(\"Edit\")\r\n\r\n    const toggleSaveButton = () => {\r\n\r\n        if (isShowSaveButton) {\r\n            setEditTitle(\"Edit\")\r\n        } else {\r\n            setEditTitle(\"Close\")\r\n        }\r\n\r\n        setIsShowSaveButton(!isShowSaveButton)\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        let companionName = document.querySelector(\"input[name=companionName]\").value\r\n        let contact = document.querySelector(\"input[name=contact]\").value\r\n        let relationship = document.querySelector(\"input[name=relationship]\").value\r\n        let address = document.querySelector(\"input[name=address]\").value\r\n\r\n        setIsProcessing(true)\r\n\r\n        let data = {\r\n            \"name\": companionName,\r\n            \"contact\": contact,\r\n            \"relationship\": relationship,\r\n            \"address\": address\r\n        }\r\n\r\n        API.put(`companion/update/${companionId}`, data, {\r\n            headers: {\r\n                'Authorization': 'bearer ' + token.access_token,\r\n            }\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n\r\n                loadProfile()\r\n                setIsProcessing(false)\r\n\r\n                Swal.fire(\r\n                    'Transaction Completed!',\r\n                    result.data.message,\r\n                    'success'\r\n                )\r\n\r\n            } else {\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Failed!',\r\n                    result.data.message,\r\n                    'error'\r\n                )\r\n            }\r\n        }).catch(e => {\r\n            setIsProcessing(false)\r\n            Swal.fire(\r\n                'Transaction Failed!',\r\n                'Technical Error',\r\n                'error'\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let companion = profileData[0].companions[profileData[0].companions.length - 1]\r\n        setCompanionId(companion.id)\r\n        setCompanionName(companion.name)\r\n        setContact(companion.contact)\r\n        setRelationship(companion.relationship)\r\n        setAddress(companion.address)\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"m-0 p-0\">\r\n            <Button onClick={toggleSaveButton}>\r\n                {!isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faEdit} className=\"mr-1\" color=\"primary\" />\r\n                }\r\n                {isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faTimes} className=\"mr-1\" color=\"danger\" />\r\n                }\r\n                {editTitle}\r\n            </Button>\r\n\r\n            <form onSubmit={(e) => formSubmit(e)}>\r\n                <Paper className=\"p-2 m-0 mb-2\">\r\n                    <Row className=\"m-0 p-0\">\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={companionName}\r\n                                onChange={(e) => setCompanionName(e.target.value)}\r\n                                name=\"companionName\"\r\n                                label=\"Companion Name\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                name=\"contact\"\r\n                                label=\"Contact Number\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"m-0 p-0 mt-2\">\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                name=\"relationship\"\r\n                                label=\"Relationship\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                name=\"address\"\r\n                                label=\"Address\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {isProcessing &&\r\n                            <Col md={12}>\r\n                                <Paper className=\"p-2 m-2 mt-3\">\r\n                                    <LinearProgressBarWithLabel title=\"Updating Companion Details\" />\r\n                                </Paper>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Paper>\r\n                {isShowSaveButton &&\r\n                    <Button size=\"large\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" disabled={isProcessing} style={{ minWidth: \"120px\" }}>\r\n                        <FontAwesomeIcon icon={faUserEdit} className=\"mr-1\" size=\"lg\" /> Save\r\n                    </Button>\r\n                }\r\n            </form>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default CompanionForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport API from '../../../Api'\r\nimport Swal from 'sweetalert2'\r\nimport { useAuth } from '../../../context/auth'\r\nimport { useProfile } from '../../../context/profile'\r\nimport { Paper, TextField, Button } from '@material-ui/core'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserEdit, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport LinearProgressBarWithLabel from \"../../UI/Common/LinearProgressBarWithLabel\"\r\n\r\nconst TransportationForm = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    let loadProfile = useProfile().loadProfile\r\n    const token = useAuth().authTokens\r\n    const [transpoId, setTranspoId] = useState(\"\")\r\n    const [vehicle, setVehicle] = useState(\"\")\r\n    const [plateNumber, setPlateNumber] = useState(\"\")\r\n    const [driver, setDriver] = useState(\"\")\r\n    const [relationship, setRelationship] = useState(\"\")\r\n    const [contact, setContact] = useState(\"\")\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isShowSaveButton, setIsShowSaveButton] = useState(false)\r\n    const [editTitle, setEditTitle] = useState(\"Edit\")\r\n\r\n    const toggleSaveButton = () => {\r\n\r\n        if (isShowSaveButton) {\r\n            setEditTitle(\"Edit\")\r\n        } else {\r\n            setEditTitle(\"Close\")\r\n        }\r\n\r\n        setIsShowSaveButton(!isShowSaveButton)\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        let vehicle = document.querySelector(\"input[name=vehicle]\").value\r\n        let plateNumber = document.querySelector(\"input[name=plateNumber]\").value\r\n        let driver = document.querySelector(\"input[name=driver]\").value\r\n        let relationship = document.querySelector(\"input[name=relationship]\").value\r\n        let contact = document.querySelector(\"input[name=contact]\").value\r\n\r\n        setIsProcessing(true)\r\n\r\n        let data = {\r\n            \"vehicle\": vehicle,\r\n            \"plate_no\": plateNumber,\r\n            \"driver\": driver,\r\n            \"relationship\": relationship,\r\n            \"contact\": contact\r\n        }\r\n\r\n\r\n        API.put(`transportation/update/${transpoId}`, data, {\r\n            headers: {\r\n                'Authorization': 'bearer ' + token.access_token,\r\n            }\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n\r\n                loadProfile()\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Completed!',\r\n                    result.data.message,\r\n                    'success'\r\n                )\r\n\r\n            } else {\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Failed!',\r\n                    result.data.message,\r\n                    'error'\r\n                )\r\n            }\r\n        }).catch(e => {\r\n            setIsProcessing(false)\r\n            Swal.fire(\r\n                'Transaction Failed!',\r\n                'Technical Error',\r\n                'error'\r\n            )\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let transportation = profileData[0].transportation[profileData[0].transportation.length - 1]\r\n        setTranspoId(transportation.id)\r\n        setVehicle(transportation.vehicle)\r\n        setPlateNumber(transportation.plate_no)\r\n        setDriver(transportation.driver)\r\n        setRelationship(transportation.relationship)\r\n        setContact(transportation.contact)\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"m-0 p-0\">\r\n            <Button onClick={toggleSaveButton}>\r\n                {!isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faEdit} className=\"mr-1\" color=\"primary\" />\r\n                }\r\n                {isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faTimes} className=\"mr-1\" color=\"danger\" />\r\n                }\r\n                {editTitle}\r\n            </Button>\r\n\r\n            <form onSubmit={(e) => formSubmit(e)}>\r\n                <Paper className=\"p-2 m-0 mb-2\">\r\n                    <Row className=\"m-0 p-0\">\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={vehicle}\r\n                                onChange={(e) => setVehicle(e.target.value)}\r\n                                name=\"vehicle\"\r\n                                label=\"Vehicle Description\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={plateNumber}\r\n                                onChange={(e) => setPlateNumber(e.target.value)}\r\n                                name=\"plateNumber\"\r\n                                label=\"Plate Number\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"m-0 p-0 mt-2\">\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={driver}\r\n                                onChange={(e) => setDriver(e.target.value)}\r\n                                name=\"driver\"\r\n                                label=\"Driver\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={relationship}\r\n                                onChange={(e) => setRelationship(e.target.value)}\r\n                                name=\"relationship\"\r\n                                label=\"Relationship\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"m-0 p-0 mt-2\">\r\n                        <Col md={6}>\r\n                            <TextField\r\n                                value={contact}\r\n                                onChange={(e) => setContact(e.target.value)}\r\n                                name=\"contact\"\r\n                                label=\"Contact\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {isProcessing &&\r\n                            <Col md={12}>\r\n                                <Paper className=\"p-2 m-2 mt-3\">\r\n                                    <LinearProgressBarWithLabel title=\"Updating Transportation Details\" />\r\n                                </Paper>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Paper>\r\n                {isShowSaveButton &&\r\n                    <Button size=\"large\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" disabled={isProcessing} style={{ minWidth: \"120px\" }}>\r\n                        <FontAwesomeIcon icon={faUserEdit} className=\"mr-1\" size=\"lg\" /> Save\r\n                    </Button>\r\n                }\r\n            </form>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default TransportationForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport { useProfile } from '../../../../context/profile'\r\nconst StartQuarantineDate = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    const dateFns = new DateFnsUtils()\r\n    const [startQuarantineDate, setStartQuarantineDate] = useState(null)\r\n\r\n    const changeHandler = (date) => {\r\n        setStartQuarantineDate(date)\r\n        if(props.startDateChangeHandler !== null){\r\n            props.startDateChangeHandler(date)\r\n        }        \r\n    }\r\n\r\n    useEffect(() => {\r\n        let quarantine = profileData[0].quarantine[profileData[0].quarantine.length - 1]\r\n        setStartQuarantineDate(dateFns.format(new Date(quarantine.start), \"MMM/d/yyyy\"))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    value={startQuarantineDate}\r\n                    onChange={(date, value) => changeHandler(date)}\r\n                    name=\"startQurantineDate\"\r\n                    label=\"Start\"\r\n                    format=\"MMM/d/yyyy\"\r\n                    required\r\n                    clearable\r\n                    hideTabs\r\n                    showTodayButton\r\n                    fullWidth\r\n                    disabled={!props.isShowSaveButton}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StartQuarantineDate ","import React, { useState, useEffect } from 'react'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { useProfile } from '../../../../context/profile'\r\n\r\nconst EndQuarantineDate = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    const dateFns = new DateFnsUtils()\r\n    const [endQuarantineDate, setEndQuarantineDate] = useState(null)\r\n\r\n    useEffect(() => {\r\n        let quarantine = profileData[0].quarantine[profileData[0].quarantine.length - 1]\r\n        setEndQuarantineDate(dateFns.format(new Date(quarantine.end), \"MMM/d/yyyy\"))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    value={endQuarantineDate}\r\n                    onChange={(date, value) => setEndQuarantineDate(date)}\r\n                    name=\"endQuarantineDate\"\r\n                    label=\"End\"\r\n                    format=\"MMM/d/yyyy\"\r\n                    disabled={props.isStartSelected}\r\n                    minDate={props.minDate}\r\n                    required\r\n                    clearable\r\n                    hideTabs\r\n                    fullWidth\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndQuarantineDate ","import React, { useState, useEffect } from 'react'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport Swal from 'sweetalert2'\r\nimport API from '../../../Api'\r\nimport { useAuth } from '../../../context/auth'\r\nimport { useProfile } from '../../../context/profile'\r\nimport { TextField, Tooltip, Paper, Button } from '@material-ui/core'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserEdit, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport StartQuarantineDate from './Fields/StartQuarantineDate'\r\nimport EndQuarantineDate from './Fields/EndQuarantineDate'\r\nimport LinearProgressBarWithLabel from '../../UI/Common/LinearProgressBarWithLabel'\r\n\r\nconst QuarantineForm = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    let loadProfile = useProfile().loadProfile\r\n    const token = useAuth().authTokens\r\n    const dateFns = new DateFnsUtils()\r\n    const [quarantineId, setQuarantineId] = useState(\"\")\r\n    const [monitoring, setMonitoring] = useState(\"\")\r\n    const [isStartSelected, setIsStartSelected] = useState(true)\r\n    const [minDate, setMinDate] = useState(null)\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isShowSaveButton, setIsShowSaveButton] = useState(false)\r\n    const [editTitle, setEditTitle] = useState(\"Edit\")\r\n\r\n    const toggleSaveButton = () => {\r\n\r\n        if (isShowSaveButton) {\r\n            setEditTitle(\"Edit\")\r\n        } else {\r\n            setEditTitle(\"Close\")\r\n        }\r\n\r\n        setIsShowSaveButton(!isShowSaveButton)\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        let startDate = document.querySelector(\"input[name=startQurantineDate]\").value\r\n        let endDate = document.querySelector(\"input[name=endQuarantineDate]\").value\r\n        let monitoring = document.querySelector(\"textarea[name=monitoring]\").value\r\n        \r\n\r\n        setIsProcessing(true)\r\n\r\n        let data = {\r\n            \"start\": dateFns.format(new Date(startDate), \"Y-M-dd 00:00:00\"),\r\n            \"end\": dateFns.format(new Date(endDate), \"Y-M-dd 00:00:00\"),\r\n            \"monitoring\": monitoring\r\n        }\r\n\r\n\r\n        API.put(`quarantine/update/${quarantineId}`, data, {\r\n            headers: {\r\n                'Authorization': 'bearer ' + token.access_token,\r\n            }\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n                loadProfile()\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Completed!',\r\n                    result.data.message,\r\n                    'success'\r\n                )\r\n            } else {\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Failed!',\r\n                    result.data.message,\r\n                    'error'\r\n                )\r\n            }\r\n        }).catch(e => {\r\n            setIsProcessing(false)\r\n            Swal.fire(\r\n                'Transaction Failed!',\r\n                'Technical Error',\r\n                'error'\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let quarantine = profileData[0].quarantine[profileData[0].quarantine.length - 1]\r\n        setQuarantineId(quarantine.id)\r\n        setMonitoring(quarantine.monitoring)\r\n    }, [])\r\n\r\n    const startDateChangeHandler = (value) => {\r\n        if (value !== \"\") {\r\n            setMinDate(dateFns.addDays(new Date(value), 1))\r\n            setIsStartSelected(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"m-0 p-0\">\r\n            <Button onClick={toggleSaveButton}>\r\n                {!isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faEdit} className=\"mr-1\" color=\"primary\" />\r\n                }\r\n                {isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faTimes} className=\"mr-1\" color=\"danger\" />\r\n                }\r\n                {editTitle}\r\n            </Button>\r\n\r\n            <form onSubmit={(e) => formSubmit(e)}>\r\n                <Paper className=\"p-2 m-0 mb-2\">\r\n                    <Row className=\"m-0 p-0\">\r\n                        <Col md={6}>\r\n                            <StartQuarantineDate startDateChangeHandler={startDateChangeHandler} isShowSaveButton={isShowSaveButton} />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <EndQuarantineDate minDate={minDate} isStartSelected={isStartSelected} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"m-0 p-0 mt-3\">\r\n                        <Col md={12}>\r\n                            <Tooltip title=\"Enter monitoring details\" placement=\"top\">\r\n                                <TextField\r\n                                    value={monitoring}\r\n                                    onChange={(e) => setMonitoring(e.target.value)}\r\n                                    name=\"monitoring\"\r\n                                    label=\"Monitoring\"\r\n                                    placeholder=\"Monitoring\"\r\n                                    multiline\r\n                                    rows={2}\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    disabled={!isShowSaveButton}\r\n                                />\r\n                            </Tooltip>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {isProcessing &&\r\n                            <Col md={12}>\r\n                                <Paper className=\"p-2 m-2 mt-3\">\r\n                                    <LinearProgressBarWithLabel title=\"Updating Quarantine Details\" />\r\n                                </Paper>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Paper>\r\n                {isShowSaveButton &&\r\n                    <Button size=\"large\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" disabled={isProcessing} style={{ minWidth: \"120px\" }}>\r\n                        <FontAwesomeIcon icon={faUserEdit} className=\"mr-1\" size=\"lg\" /> Save\r\n                    </Button>\r\n                }\r\n            </form>\r\n        </Container >\r\n    )\r\n\r\n}\r\n\r\nexport default QuarantineForm\r\n","import React, { useState, useEffect } from 'react' \r\nimport { useProfile } from '../../../../context/profile'\r\nimport TextField from '@material-ui/core/TextField' \r\nimport MenuItem from '@material-ui/core/MenuItem' \r\n\r\nconst TestTypesSelect = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    const [testType, setTestType] = useState('') \r\n    const testTypeOptions = [\r\n        {\r\n            value: \"1\",\r\n            label: \"RT-PCT\"\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        let tests = profileData[0].tests[profileData[0].tests.length - 1]\r\n        setTestType(tests.test_type_id)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                select\r\n                label=\"Test Type\"\r\n                name=\"testType\"\r\n                value={testType}\r\n                onChange={(e) => setTestType(e.target.value)}\r\n                fullWidth\r\n                required\r\n                disabled={!props.isShowSaveButton}\r\n            >\r\n                {testTypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestTypesSelect ","import React, { useState, useEffect } from 'react' \r\nimport { useProfile } from '../../../../context/profile'\r\nimport TextField from '@material-ui/core/TextField' \r\nimport MenuItem from '@material-ui/core/MenuItem' \r\n\r\nconst TestsStatusSelect = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    const [testStatus, setTestStatus] = useState(\"\") \r\n\r\n    const statusOptions = [\r\n        {\r\n            value: \"PENDING\",\r\n            label: \"PENDING\"\r\n        },\r\n        {\r\n            value: \"POSITIVE\",\r\n            label: \"POSITIVE\"\r\n        },\r\n        {\r\n            value: \"NEGATIVE\",\r\n            label: \"NEGATIVE\"\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        let tests = profileData[0].tests[profileData[0].tests.length - 1]\r\n        setTestStatus(tests.value)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                select\r\n                label=\"Status Type\"\r\n                name=\"testStatus\"\r\n                value={testStatus}\r\n                onChange={(e) => setTestStatus(e.target.value)}\r\n                fullWidth\r\n                required\r\n                disabled={!props.isShowSaveButton}\r\n            >\r\n                {statusOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestsStatusSelect","import React, {useState, useEffect} from 'react' \r\nimport { useProfile } from '../../../../context/profile'\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers' \r\nimport DateFnsUtils from '@date-io/date-fns' \r\n\r\nconst TestReleaseDate = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    const dateFns = new DateFnsUtils()\r\n    const [testRelease, setTestRelease] = useState(null)\r\n\r\n    const changeHandler = (value) => {\r\n        setTestRelease(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tests = profileData[0].tests[profileData[0].tests.length - 1]\r\n        setTestRelease(dateFns.format(new Date(tests.released), \"MMM/d/yyyy\"))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                    label=\"Date Released\"\r\n                    name=\"testRelease\"\r\n                    value={testRelease}\r\n                    onChange={(date, value) => changeHandler(value)}\r\n                    format=\"MMM/d/yyyy\"\r\n                    required\r\n                    clearable\r\n                    hideTabs\r\n                    fullWidth\r\n                    disabled={!props.isShowSaveButton}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestReleaseDate ","import React, { useState, useEffect } from 'react'\r\nimport API from '../../../Api'\r\nimport Swal from 'sweetalert2'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { useAuth } from '../../../context/auth'\r\nimport { useProfile } from '../../../context/profile'\r\nimport { TextField, Paper, Button } from '@material-ui/core'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserEdit, faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport TestTypesSelect from '../Forms/Fields/TestTypesSelect'\r\nimport TestsStatusSelect from '../Forms/Fields/TestsStatusSelect'\r\nimport TestReleaseDate from './Fields/TestReleaseDate'\r\nimport LinearProgressBarWithLabel from '../../UI/Common/LinearProgressBarWithLabel'\r\n\r\nconst TestsForm = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    let loadProfile = useProfile().loadProfile\r\n    const token = useAuth().authTokens\r\n    const dateFns = new DateFnsUtils\r\n    const [testsId, setTestsId] = useState(\"\")\r\n    const [testsLocation, setTestLocation] = useState(\"\")\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isShowSaveButton, setIsShowSaveButton] = useState(false)\r\n    const [editTitle, setEditTitle] = useState(\"Edit\")\r\n    const toggleSaveButton = () => {\r\n\r\n        if (isShowSaveButton) {\r\n            setEditTitle(\"Edit\")\r\n        } else {\r\n            setEditTitle(\"Close\")\r\n        }\r\n\r\n        setIsShowSaveButton(!isShowSaveButton)\r\n    }\r\n\r\n    const formSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        setIsProcessing(true)\r\n\r\n        let data = {\r\n            \"test_type_id\": document.querySelector(\"input[name=testType]\").value,\r\n            \"value\": document.querySelector(\"input[name=testStatus]\").value,\r\n            \"location\": document.querySelector(\"input[name=testLocation]\").value,\r\n            \"released\": dateFns.format(new Date(document.querySelector(\"input[name=testRelease]\").value), \"Y-M-dd\"),\r\n        }\r\n\r\n\r\n        API.put(`test/update/${testsId}`, data, {\r\n            headers: {\r\n                'Authorization': 'bearer ' + token.access_token,\r\n            }\r\n        }).then(result => {\r\n            if (result.data.status) {\r\n\r\n                loadProfile()\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Completed!',\r\n                    result.data.message,\r\n                    'success'\r\n                )\r\n\r\n            } else {\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Failed!',\r\n                    result.data.message,\r\n                    'error'\r\n                )\r\n            }\r\n        }).catch(e => {\r\n            setIsProcessing(false)\r\n            Swal.fire(\r\n                'Transaction Failed!',\r\n                'Technical Error',\r\n                'error'\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tests = profileData[0].tests[profileData[0].tests.length - 1]\r\n        setTestsId(tests.id)\r\n        setTestLocation(tests.location)\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"m-0 p-0\">\r\n            <Button onClick={toggleSaveButton}>\r\n                {!isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faEdit} className=\"mr-1\" color=\"primary\" />\r\n                }\r\n                {isShowSaveButton &&\r\n                    <FontAwesomeIcon icon={faTimes} className=\"mr-1\" color=\"danger\" />\r\n                }\r\n                {editTitle}\r\n            </Button>\r\n            <form onSubmit={(e) => formSubmit(e)}>\r\n                <Paper className=\"p-1 m-0 mb-2\">\r\n                    <Row className=\"m-1 p-1\">\r\n                        <Col md={6} className=\"mt-1\">\r\n                            <TestTypesSelect isShowSaveButton={isShowSaveButton} />\r\n                            <TextField\r\n                                value={testsLocation}\r\n                                onChange={(e) => setTestLocation(e.target.value)}\r\n                                name=\"testLocation\"\r\n                                label=\"Test Location\"\r\n                                fullWidth\r\n                                required\r\n                                disabled={!isShowSaveButton}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6} className=\"mt-1\">\r\n                            <TestsStatusSelect isShowSaveButton={isShowSaveButton} />\r\n                            <TestReleaseDate isShowSaveButton={isShowSaveButton} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {isProcessing &&\r\n                            <Col md={12}>\r\n                                <Paper className=\"p-2 m-2 mt-3\">\r\n                                    <LinearProgressBarWithLabel title=\"Updating Tests Details\" />\r\n                                </Paper>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Paper>\r\n                {isShowSaveButton &&\r\n                    <Button size=\"large\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" disabled={isProcessing} style={{ minWidth: \"120px\" }}>\r\n                        <FontAwesomeIcon icon={faUserEdit} className=\"mr-1\" size=\"lg\" /> Save\r\n                    </Button>\r\n                }\r\n            </form>\r\n        </Container>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default TestsForm\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useProfile } from '../../../../context/profile'\r\n\r\nimport { Container, Row, Col, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { Paper } from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCommentDots } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport LinearProgressBarWithLabel from '../../Common/LinearProgressBarWithLabel'\r\n\r\n\r\nconst Remarks = (props) => {\r\n\r\n    let profileData = useProfile().profileData\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [remarks, setRemarks] = useState([])\r\n\r\n    const loadRemarks = useCallback(() => {\r\n        setIsProcessing(true)\r\n        let remarks = profileData[0].remarks\r\n        let remarksList = formatData(remarks)\r\n\r\n        setTimeout(() => {\r\n            setIsProcessing(false)\r\n            setRemarks(remarksList)\r\n        }, 1500)        \r\n        \r\n    }, [])\r\n\r\n    const formatData = (result) => {\r\n        if (result !== null && result.length > 0) {\r\n            return result.map((remarks) => {\r\n                let remarksList = [\r\n                    remarks.remarks\r\n                ]\r\n\r\n                return remarksList\r\n            })\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadRemarks()\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"m-0 p-0\">\r\n            <Paper>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <ListGroup style={{ overflow: \"auto\", overflowX: \"auto\", maxHeight: \"200px\" }}>\r\n                            {remarks.length > 0 &&\r\n                                remarks.map((rm, index) => {\r\n                                    return <ListGroupItem key={index}>\r\n                                        <FontAwesomeIcon icon={faCommentDots} className=\"text-success mr-1\" />\r\n                                        {rm[0]}\r\n                                    </ListGroupItem>\r\n                                })\r\n                            }\r\n                            {\r\n                                isProcessing &&\r\n                                <ListGroupItem>\r\n                                    <LinearProgressBarWithLabel title=\"Loading records\" />\r\n                                </ListGroupItem>\r\n                            }\r\n                            {\r\n                                (remarks.length === 0 && !isProcessing) &&\r\n                                <ListGroupItem className=\"text-center\">No Data to Display</ListGroupItem>\r\n                            }\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Remarks ","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useProfile } from '../../../../context/profile'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { Container, Row, Col, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { Paper } from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTemperatureHigh } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport LinearProgressBarWithLabel from '../../Common/LinearProgressBarWithLabel'\r\n\r\n\r\nconst Logs = (props) => {\r\n\r\n    const dateFns = new DateFnsUtils()\r\n    let profileData = useProfile().profileData\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [logs, setLogs] = useState([])\r\n\r\n    const loadLogs = useCallback(() => {\r\n        setIsProcessing(true)\r\n        let logs = profileData[0].trace_logs\r\n        let logsList = formatData(logs)\r\n\r\n        setTimeout(() => {\r\n            setIsProcessing(false)\r\n            setLogs(logsList)\r\n\r\n        }, 1500)     \r\n        \r\n    }, [])\r\n\r\n    const formatData = (result) => {\r\n        console.log(result)\r\n        if (result !== null && result.length > 0) {\r\n            return result.map((logs) => {\r\n\r\n                let logsList = [\r\n                    logs.temperature,\r\n                    dateFns.format(new Date(logs.created_at), \"MMMM dd, yyyy\")\r\n                ]\r\n\r\n                return logsList\r\n            })\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadLogs()\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"m-0 p-0\">\r\n            <Paper>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <ListGroup style={{ overflow: \"auto\", overflowX: \"auto\", maxHeight: \"200px\" }}>\r\n                            {logs.length > 0 &&\r\n                                logs.map((rm, index) => {\r\n                                    return <ListGroupItem key={index}>\r\n                                        <FontAwesomeIcon icon={faTemperatureHigh} className=\"text-danger mr-1\" />\r\n                                        {`${rm[0]} on ${rm[1]}`}\r\n                                    </ListGroupItem>\r\n                                })\r\n                            }\r\n                            {\r\n                                isProcessing &&\r\n                                <ListGroupItem>\r\n                                    <LinearProgressBarWithLabel title=\"Loading records\" />\r\n                                </ListGroupItem>\r\n                            }\r\n                            {\r\n                                (logs.length === 0 && !isProcessing) &&\r\n                                <ListGroupItem className=\"text-center\">No Data to Display</ListGroupItem>\r\n                            }\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Logs ","import React, { useState, useEffect } from 'react'\r\nimport { useAuth } from '../../../context/auth'\r\nimport { Accordion, AccordionSummary, AccordionDetails, Typography } from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMapMarkedAlt, faUsers, faCar, faHouseUser, faSyringe, faTemperatureHigh, faCommentDots } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport AddressForm from '../../UI/Forms/AddressForm'\r\nimport CompanionForm from '../../UI/Forms/CompanionForm'\r\nimport TransportationForm from '../../UI/Forms/TransportationForm'\r\nimport QuarantineForm from '../../UI/Forms/QuarantineForm'\r\nimport TestsForm from '../../UI/Forms/TestsForm'\r\nimport Remarks from '../../UI/Tabs/TabContent/Remarks'\r\nimport Logs from '../../UI/Tabs/TabContent/Logs'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"mt-2\">\r\n            <h5 className=\"p-2 text-left\">\r\n                {/* Welcome Jomar! */}\r\n            </h5>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faMapMarkedAlt} className=\"mr-1\" />\r\n                    Address\r\n                </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <AddressForm />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faUsers} className=\"mr-1\" />\r\n                        Companions\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <CompanionForm />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faCar} className=\"mr-1\" />\r\n                        Transportation\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <TransportationForm />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faHouseUser} className=\"mr-1\" />\r\n                        Quarantine\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <QuarantineForm />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faSyringe} className=\"mr-1\" />\r\n                        Tests\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <TestsForm />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faCommentDots} className=\"mr-1\" />\r\n                        Remarks\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Remarks />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    <Typography>\r\n                        <FontAwesomeIcon icon={faTemperatureHigh} className=\"mr-1\" />\r\n                        Temperature Logs\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Logs />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport API from '../../../Api'\r\nimport Swal from 'sweetalert2'\r\nimport { useAuth } from \"../../../context/auth\"\r\n\r\nimport {\r\n    Row, Col\r\n} from 'reactstrap'\r\n\r\nimport { TextField, InputAdornment, IconButton, Paper, Button } from '@material-ui/core'\r\nimport Visibility from '@material-ui/icons/Visibility'\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faKey, faUserEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport LinearProgressBarWithLabel from '../../UI/Common/LinearProgressBarWithLabel'\r\n\r\nconst Account = (props) => {\r\n\r\n    const token = useAuth().authTokens\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [oldPassword, setOldPassword] = useState(\"\")\r\n\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [isShowNewPass, setIsShowNewPass] = useState(false)\r\n    const [isShowConfirmPass, setIsShowConfirmPass] = useState(false)\r\n    const [isShowOldPass, setIsShowOldPass] = useState(false)\r\n    const [isConfirmError, setIsConfirmError] = useState(false)\r\n    const [isMinimum, setIsMinimum] = useState(false)\r\n\r\n\r\n    const toggleShowNewPassword = () => setIsShowNewPass(!isShowNewPass)\r\n    const toggleShowConfirmPassword = () => setIsShowConfirmPass(!isShowConfirmPass)\r\n    const toggleShowOldPassword = () => setIsShowOldPass(!isShowOldPass)\r\n\r\n    const changePasswordHandler = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n\r\n        if (!isConfirmError && !isMinimum) {\r\n            setIsProcessing(true)\r\n\r\n            let newPassData = {\r\n                \"password\": oldPassword,\r\n                \"new_password\": password\r\n            }\r\n\r\n            console.log(newPassData)\r\n\r\n\r\n            API.post('examinee/update-password/', newPassData, {\r\n                headers: {\r\n                    'Authorization': 'bearer ' + token.access_token,\r\n                }\r\n            }).then(result => {\r\n                console.log(result)\r\n                setIsProcessing(false)\r\n                if (result.data.status) {\r\n                    Swal.fire(\r\n                        'Transaction Completed!',\r\n                        'Password Successfully Updated!',\r\n                        'success'\r\n                    )\r\n                } else {\r\n                    console.log(result.data.message)\r\n                    Swal.fire(\r\n                        'Transaction Failed!',\r\n                        result.data.message,\r\n                        'error'\r\n                    )\r\n                }\r\n            }).catch(e => {\r\n                console.log(e)\r\n                setIsProcessing(false)\r\n                Swal.fire(\r\n                    'Transaction Failed!',\r\n                    'Failed to Update Password!',\r\n                    'error'\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const checkConfirmPassword = (value) => {\r\n        if (value === password) {\r\n            setIsConfirmError(false)\r\n        } else {\r\n            setIsConfirmError(true)\r\n        }\r\n    }\r\n\r\n    const handleNewPassword = (value) => {\r\n        setPassword(value)\r\n        if (value.length < 6) {\r\n            setIsMinimum(true)\r\n        } else {\r\n            setIsMinimum(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper elevation={5} className=\"m-2 p-4 text-center\">\r\n                <h5 className=\"m-0 p-0\">\r\n                    <FontAwesomeIcon icon={faKey} className=\"mr-1\" />\r\n                    Change Password\r\n                </h5>\r\n                <form onSubmit={(e) => changePasswordHandler(e)}>\r\n                    <Row className=\"p-4 pt-0\">\r\n                        <div className=\"col-md-12 p-1\">\r\n                            <div className=\"mb-1\">\r\n                                <TextField\r\n                                    name=\"old_password\"\r\n                                    label=\"Old Password\"\r\n                                    type={isShowOldPass ? \"text\" : \"password\"}\r\n                                    onChange={(e) => setOldPassword(e.target.value)}\r\n                                    fullWidth\r\n                                    required\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={toggleShowOldPassword}>\r\n                                                {isShowOldPass ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <TextField\r\n                                    type={isShowNewPass ? \"text\" : \"password\"}\r\n                                    name=\"new_password\"\r\n                                    label=\"New Password\"\r\n                                    onChange={(e) => handleNewPassword(e.target.value)}\r\n                                    error={isMinimum}\r\n                                    fullWidth\r\n                                    required\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={toggleShowNewPassword}>\r\n                                                {isShowNewPass ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt-1 mb-1\">\r\n                                <TextField\r\n                                    error={isConfirmError}\r\n                                    type={isShowConfirmPass ? \"text\" : \"password\"}\r\n                                    name=\"confirm_password\"\r\n                                    label=\"Confirm Password\"\r\n                                    onChange={(e) => checkConfirmPassword(e.target.value)}\r\n                                    fullWidth\r\n                                    required\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">\r\n                                            <IconButton onClick={toggleShowConfirmPassword}>\r\n                                                {isShowConfirmPass ? <Visibility /> : <VisibilityOff />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <Button size=\"large\" fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" disabled={isProcessing} style={{ minWidth: \"120px\" }}>\r\n                            <FontAwesomeIcon icon={faUserEdit} className=\"mr-1\" size=\"lg\" /> Save\r\n                        </Button>\r\n                    </Row>\r\n                    <Row>\r\n                        {isProcessing &&\r\n                            <Col md={12}>\r\n                                <Paper className=\"p-2 m-2 mt-3\">\r\n                                    <LinearProgressBarWithLabel title=\"Updating Password\" />\r\n                                </Paper>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Account ","import React from 'react'\r\nimport AccountForm from '../../UI/Forms/AccountForm'\r\n\r\nconst Account = () => {\r\n    return (\r\n        <div className=\"mt-2\">\r\n           <AccountForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Account\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { useAuth } from '../../context/auth'\r\nimport { ProfileContext } from '../../context/profile'\r\n\r\nimport API from '../../Api'\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    Col,\r\n    Container,\r\n} from 'reactstrap'\r\n\r\nimport Logo from '../../assets/logo.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Home from '../Dashboard/Home/Home'\r\nimport Account from './Account/Account'\r\nimport Footer from './Footer/Footer'\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const token = useAuth().authTokens\r\n    const [profileData, setProfileData] = useState({})\r\n    const [drawerStatus, setDrawerStatus] = useState(true)\r\n    const [isManageCollapse, setIsManageCollapse] = useState(false)\r\n    const [isGenerateCollapse, setIsGenerateCollapse] = useState(false)\r\n    const [modalMargin, setModalMargin] = useState(\"20%\")\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const toggleDrawer = () => setIsOpen(!isOpen)\r\n\r\n    const [changePasswordModal, setVisiblechangePasswordModal] = useState(false)\r\n    const toggleChangePasswordModal = () => setVisiblechangePasswordModal(!changePasswordModal)\r\n\r\n    const handleDrawer = () => {\r\n        setDrawerStatus(!drawerStatus)\r\n        if (!drawerStatus) {\r\n            setModalMargin(\"20%\")\r\n        } else {\r\n            setModalMargin(\"13%\")\r\n        }\r\n    }\r\n\r\n    const handleManageCollapse = () => {\r\n        setIsManageCollapse(!isManageCollapse)\r\n    }\r\n\r\n    const handleGenerateCollapse = () => {\r\n        setIsGenerateCollapse(!isGenerateCollapse)\r\n    }\r\n\r\n    const handleNavigation = (stringPath = \"/\") => {\r\n        switch (stringPath) {\r\n            case \"/\":\r\n                props.history.push(\"/\")\r\n                break\r\n            case \"account\":\r\n                props.history.push(\"/account\")\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        sessionStorage.removeItem('tokens')\r\n        window.location.reload()\r\n    }\r\n\r\n    const changePasswordHandler = (e) => {\r\n        e.preventDefault()\r\n        toggleChangePasswordModal()\r\n    }\r\n\r\n    const getProfileInfo = () => {\r\n        API.get('examinee/profile', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token.access_token\r\n            }\r\n        }).then(result => {\r\n            setProfileData(result.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProfileInfo()\r\n    }, [])\r\n\r\n    return (\r\n        <ProfileContext.Provider value={{ profileData, loadProfile: getProfileInfo }}>\r\n            <Container fluid className=\"m-0 p-0\">\r\n                <Navbar style={{ backgroundColor: \"#1a1751\" }} expand=\"md\">\r\n                    <NavbarBrand href=\"/\" className=\"text-white\">\r\n                        <img src={Logo} width=\"130\" height=\"40\" />\r\n                    </NavbarBrand>\r\n                    <button onClick={toggleDrawer} className=\"navbar-toggler\" type=\"button\" style={{ outline: \"none\" }}>\r\n                        <FontAwesomeIcon icon={faBars} className=\"text-white\" />\r\n                    </button>\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                        <Nav className=\"mr-auto text-left\" navbar>\r\n                            <NavItem>\r\n                                <NavLink onClick={() => handleNavigation(\"/\")} className=\"text-white btn text-left\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink onClick={() => handleNavigation(\"account\")} className=\"text-white btn text-left\">My Account</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink onClick={handleLogout} className=\"text-white btn text-left\">Logout</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" TransitionProps={{ unmountOnExit: true }}>\r\n                                    <Home />\r\n                                </Route>\r\n                                <Route path=\"/account\">\r\n                                    <Account />\r\n                                </Route>\r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n        </ProfileContext.Provider>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Error404 extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container card\" style={{marginTop: '10%' }}>\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-sm-12 text-center\">\r\n                        <h3 className=\"text-danger  p-1 m-4\"><b>Error 404: </b> Page Not Found</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\n\r\nimport PrivateRoute from '../PrivateRoute'\r\nimport { AuthContext } from \"../context/auth\"\r\n\r\nimport './App.css'\r\n\r\nimport Login from '../components/Login/Login'\r\nimport Dashboard from '../components/Dashboard/Dashboard'\r\nimport Error404 from '../components/UI/Error/Error404'\r\n\r\n\r\nconst App = (props) => {\r\n  const existingTokens = JSON.parse(sessionStorage.getItem(\"tokens\"))\r\n  const [authTokens, setAuthTokens] = useState(existingTokens)\r\n\r\n  const setTokens = (data) => {\r\n    sessionStorage.setItem(\"tokens\", JSON.stringify(data))\r\n    setAuthTokens(data)\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n      <Router basename=\"/prc/module/examinee\">\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n          <PrivateRoute exact path=\"/account\" component={Dashboard} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route component={Error404} />\r\n        </Switch>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.0dad67f1.png\";"],"sourceRoot":""}